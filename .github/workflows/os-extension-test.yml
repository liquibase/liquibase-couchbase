name: Build and Test Extension

on:
    workflow_dispatch:
    pull_request:
        types:
            - opened
            - reopened
            - synchronize

jobs:
    build:
        name: Build & Package
        runs-on: ubuntu-latest
        env:
            working-directory: ./liquibase-couchbase
        steps:
            - uses: actions/checkout@v3

            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: 17
                  distribution: 'temurin'
                  cache: 'maven'

            - name: Build and Package
              working-directory: ${{env.working-directory}}
              run: mvn -B dependency:go-offline clean package -DskipTests=true

            - name: Get Artifact ID
              id: get-artifact-id
              working-directory: ${{env.working-directory}}
              run: echo "::set-output name=artifact_id::$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)"

            - name: Save Artifacts
              working-directory: ${{env.working-directory}}
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ steps.get-artifact-id.outputs.artifact_id }}-artifacts
                  path: |
                      target/*

            - name: Save Event File
              uses: actions/upload-artifact@v3
              with:
                  name: Event File
                  path: ${{ github.event_path }}

        outputs:
            artifact_id: ${{ steps.get-artifact-id.outputs.artifact_id }}

    unit-test:
        strategy:
            fail-fast: false
            matrix:
                java: [ 8, 11, 17, 18 ]
                os: [ ubuntu-latest, windows-latest ]
        name: Test Java ${{ matrix.java }} - ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        needs: build
        env:
            working-directory: ./liquibase-couchbase
        steps:
            - uses: actions/checkout@v3

            - name: Set up JDK ${{ matrix.java }}
              working-directory: ${{env.working-directory}}
              uses: actions/setup-java@v3
              with:
                  java-version: ${{ matrix.java }}
                  distribution: 'temurin'
                  cache: 'maven'

            - uses: actions/download-artifact@v3
              with:
                  name: ${{needs.build.outputs.artifact_id}}-artifacts
                  path: ./target

            - name: Run Tests
              working-directory: ${{env.working-directory}}
              run: mvn -B jacoco:prepare-agent surefire:test

            - name: Archive Test Results - ${{ matrix.os }}
              working-directory: ${{env.working-directory}}
              if: ${{ always() }}
              uses: actions/upload-artifact@v3
              with:
                  name: test-reports-jdk-${{ matrix.java }}-${{ matrix.os }}
                  path: |
                      **/target/surefire-reports
                      **/target/jacoco.exec