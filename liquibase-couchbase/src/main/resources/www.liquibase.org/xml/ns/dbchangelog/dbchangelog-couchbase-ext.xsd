<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://www.liquibase.org/xml/ns/dbchangelog-ext"
            xmlns="http://www.liquibase.org/xml/ns/dbchangelog-ext"
            elementFormDefault="qualified">

    <xsd:element name="createCollection">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="collectionName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dropCollection">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="collectionName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dropQueryIndex">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="isPrimary" type="xsd:boolean"/>
                <xsd:element name="indexName" type="xsd:string"
                             minOccurs="0"/><!-- TODO temporary solution/hotfix to be able to remove primary index by name -->
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
                <xsd:element name="collectionName" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="createPrimaryQueryIndex">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element minOccurs="0" name="bucketName" type="xsd:string"/>
                <xsd:element minOccurs="0" name="collectionName" type="xsd:string"/>
                <xsd:element name="deferred" type="xsd:boolean"/>
                <xsd:element minOccurs="0" name="indexName" type="xsd:string"/>
                <xsd:element name="numReplicas" type="xsd:int"/>
                <xsd:element minOccurs="0" name="scopeName" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="createQueryIndex">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="collectionName" type="xsd:string"/>
                <xsd:element name="deferred" type="xsd:boolean"/>

                <xsd:element ref="fields"/>
                <xsd:element name="indexName" type="xsd:string"/>
                <xsd:element name="numReplicas" type="xsd:int"/>
                <xsd:element name="scopeName" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="fields">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="field" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="insertDocuments">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
                <xsd:element name="collectionName" type="xsd:string"/>
                <xsd:choice>
                    <xsd:element ref="document"/>
                    <xsd:element ref="documents"/>
                    <xsd:element ref="importFile"/>
                </xsd:choice>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="documents">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="document" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="document">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:string"/>
                <xsd:element ref="value"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="upsertDocuments">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
                <xsd:element name="collectionName" type="xsd:string"/>
                <xsd:choice>
                    <xsd:element ref="document"/>
                    <xsd:element ref="documents"/>
                    <xsd:element ref="importFile"/>
                </xsd:choice>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="file">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="filePath" type="xsd:string"/>
            </xsd:sequence>
            <xsd:attribute name="relative" type="xsd:boolean" default="false"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="importFile">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="file"/>
                <xsd:element name="importType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="LINES"/>
                            <xsd:enumeration value="LIST"/>
                            <xsd:enumeration value="SAMPLE"/>
                            <xsd:enumeration value="KEY_GENERATORS"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="keyProviderType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="DEFAULT"/>
                            <xsd:enumeration value="UID"/>
                            <xsd:enumeration value="INCREMENT"/>
                            <xsd:enumeration value="EXPRESSION"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="keyProviderExpression" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="createBucket">
        <xsd:complexType>
            <xsd:all>
                <xsd:element name="flushEnabled" type="xsd:boolean"/>
                <xsd:element name="replicaIndexes" type="xsd:boolean"/>
                <xsd:element name="numReplicas" type="xsd:int"/>
                <xsd:element name="ramQuotaMB" type="xsd:long"/>
                <xsd:element name="maxExpiryInHours" type="xsd:long"/>
                <xsd:element name="timeoutInSeconds" type="xsd:long"/>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="bucketType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="COUCHBASE"/>
                            <xsd:enumeration value="MEMCACHED"/>
                            <xsd:enumeration value="EPHEMERAL"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="compressionMode">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="OFF"/>
                            <xsd:enumeration value="PASSIVE"/>
                            <xsd:enumeration value="ACTIVE"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="conflictResolutionType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="TIMESTAMP"/>
                            <xsd:enumeration value="SEQUENCE_NUMBER"/>
                            <xsd:enumeration value="CUSTOM"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="evictionPolicy">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="FULL"/>
                            <xsd:enumeration value="VALUE_ONLY"/>
                            <xsd:enumeration value="NOT_RECENTLY_USED"/>
                            <xsd:enumeration value="NO_EVICTION"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="minimumDurabilityLevel">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="NONE"/>
                            <xsd:enumeration value="MAJORITY"/>
                            <xsd:enumeration value="MAJORITY_AND_PERSIST_TO_ACTIVE"/>
                            <xsd:enumeration value="PERSIST_TO_MAJORITY"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="storageBackend">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="couchstore"/>
                            <xsd:enumeration value="magma"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
            </xsd:all>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dropBucket">
        <xsd:complexType>
            <xsd:all>
                <xsd:element name="bucketName" type="xsd:string"/>
            </xsd:all>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="createScope">
        <xsd:complexType>
            <xsd:all>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
            </xsd:all>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="dropScope">
        <xsd:complexType>
            <xsd:all>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
            </xsd:all>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="updateBucket">
        <xsd:complexType>
            <xsd:all>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="compressionMode">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="OFF"/>
                            <xsd:enumeration value="PASSIVE"/>
                            <xsd:enumeration value="ACTIVE"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:element name="maxExpiryInHours" type="xsd:long"/>
                <xsd:element name="numReplicas" type="xsd:int"/>
                <xsd:element name="ramQuotaMB" type="xsd:long"/>
                <xsd:element name="flushEnabled" type="xsd:boolean"/>
                <xsd:element name="timeoutInSeconds" type="xsd:long"/>
            </xsd:all>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="mutateIn">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
                <xsd:element name="collectionName" type="xsd:string"/>
                <xsd:element name="expiry" minOccurs="0" type="xsd:string"/>
                <xsd:element name="preserveExpiry" minOccurs="0" type="xsd:boolean"/>
                <xsd:element name="storeSemantics" minOccurs="0">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="REPLACE"/>
                            <xsd:enumeration value="UPSERT"/>
                            <xsd:enumeration value="INSERT"/>
                            <xsd:enumeration value="REVIVE"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
                <xsd:choice>
                    <xsd:element name="id" type="xsd:string"/>
                    <xsd:element name="whereCondition" type="xsd:string"/>
                    <xsd:element name="sqlPlusPlusQuery" type="xsd:string"/>
                </xsd:choice>
                <xsd:element ref="mutateInSpecs"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="mutateInSpecs">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="mutateInSpec" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="mutateInSpec">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="path"/>
                <xsd:choice>
                    <xsd:element ref="value" minOccurs="0"/>
                    <xsd:element ref="values" minOccurs="0"/>
                </xsd:choice>
                <xsd:element name="mutateInType">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="INSERT"/>
                            <xsd:enumeration value="ARRAY_PREPEND"/>
                            <xsd:enumeration value="ARRAY_APPEND"/>
                            <xsd:enumeration value="ARRAY_CREATE"/>
                            <xsd:enumeration value="ARRAY_INSERT"/>
                            <xsd:enumeration value="ARRAY_INSERT_UNIQUE"/>
                            <xsd:enumeration value="INCREMENT"/>
                            <xsd:enumeration value="DECREMENT"/>
                            <xsd:enumeration value="UPSERT"/>
                            <xsd:enumeration value="REPLACE"/>
                            <xsd:enumeration value="REMOVE"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="values">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="value" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="value">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="data" type="xsd:string"/>
                <xsd:element name="type">
                    <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="Long"/>
                            <xsd:enumeration value="Double"/>
                            <xsd:enumeration value="Boolean"/>
                            <xsd:enumeration value="String"/>
                            <xsd:enumeration value="Json"/>
                            <xsd:enumeration value="JsonArray"/>
                        </xsd:restriction>
                    </xsd:simpleType>
                </xsd:element>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="removeDocuments">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="bucketName" type="xsd:string"/>
                <xsd:element name="scopeName" type="xsd:string"/>
                <xsd:element name="collectionName" type="xsd:string"/>
                <xsd:choice>
                    <xsd:element name="id" maxOccurs="unbounded" type="xsd:string"/>
                    <xsd:element name="whereCondition" type="xsd:string"/>
                    <xsd:element name="sqlPlusPlusQuery" type="xsd:string"/>
                </xsd:choice>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="executeQuery">
        <xsd:complexType mixed="true">
            <xsd:sequence>
                <xsd:element ref="query"/>
                <xsd:element ref="params" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="query" type="xsd:string">
    </xsd:element>

    <xsd:element name="params">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="name" type="xsd:string"/>
                <xsd:element name="value"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="executeQueryFile">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="file"/>
            </xsd:sequence>
            <xsd:attribute name="transactional" type="xsd:boolean"/>
        </xsd:complexType>
    </xsd:element>

    <!--    Pre-conditions-->
    <xsd:element name="bucketExists">
        <xsd:complexType>
            <xsd:attribute name="bucketName" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="collectionExists">
        <xsd:complexType>
            <xsd:attribute name="bucketName" type="xsd:string"/>
            <xsd:attribute name="scopeName" type="xsd:string"/>
            <xsd:attribute name="collectionName" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="documentExists">
        <xsd:complexType>
            <xsd:attribute name="bucketName" type="xsd:string"/>
            <xsd:attribute name="scopeName" type="xsd:string"/>
            <xsd:attribute name="collectionName" type="xsd:string"/>
            <xsd:attribute name="key" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="scopeExists">
        <xsd:complexType>
            <xsd:attribute name="bucketName" type="xsd:string"/>
            <xsd:attribute name="scopeName" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="doesIndexExist">
        <xsd:complexType>
            <xsd:attribute name="bucketName" type="xsd:string"/>
            <xsd:attribute name="scopeName" type="xsd:string"/>
            <xsd:attribute name="indexName" type="xsd:string"/>
            <xsd:attribute name="collectionName" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="doesPrimaryIndexExist">
        <xsd:complexType>
            <xsd:attribute name="bucketName" type="xsd:string"/>
            <xsd:attribute name="scopeName" type="xsd:string"/>
            <xsd:attribute name="indexName" type="xsd:string"/>
            <xsd:attribute name="collectionName" type="xsd:string"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="queryCustomCheck">
        <xsd:complexType>
            <xsd:attribute name="expectedResultJson" type="xsd:string" use="required"/>
            <xsd:attribute name="query" type="xsd:string" use="required"/>
        </xsd:complexType>
    </xsd:element>

</xsd:schema>